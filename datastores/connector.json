{
    "name": "containers-connector",
    "config": {
        "connector.class": "io.debezium.connector.postgresql.PostgresConnector",
        "plugin.name": "pgoutput",
        "database.hostname": "postgresql",
        "database.port": "5432",
        "database.user": "postgres",
        "database.password": "wGW9Ck4U7SKgkZjGMqtnab9Q",
        "database.dbname": "composedb",
        "database.server.name": "postgres",
        "topic.prefix": "debezium",
        "transforms": "Filter, Unwrap",
        "transforms.Filter.type": "io.debezium.transforms.Filter",
        "transforms.Filter.language": "jsr223.groovy",
        "transforms.Filter.condition": "(value.op == 'c') || (value.op == 'u' && value.before && value.before.stream_content && value.after && value.after.stream_content && (value.before.stream_content != value.after.stream_content))",
        "transforms.Unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
        "transforms.Unwrap.operation.header": "true",
        "transforms.Unwrap.drop.tombstones": "true",
        "transforms.Unwrap.delete.handling.mode" : "rewrite",
        "transforms.Unwrap.add.fields": "table,lsn",            
        "decimal.handling.mode": "string",
        "column.include.list": "public.kjzl6hvfrbw6c732vo3usihwsmaudk78by48c6fy7qxxwkmn9yrryza13jyg6kt.stream_id,public.kjzl6hvfrbw6c732vo3usihwsmaudk78by48c6fy7qxxwkmn9yrryza13jyg6kt.controller_did,public.kjzl6hvfrbw6c732vo3usihwsmaudk78by48c6fy7qxxwkmn9yrryza13jyg6kt.stream_content,public.kjzl6hvfrbw6c8mi3r321zv8aujo0pz75u3hd75nmnw8cohfakz650td4c7qxxf.stream_id,public.kjzl6hvfrbw6c8mi3r321zv8aujo0pz75u3hd75nmnw8cohfakz650td4c7qxxf.controller_did,public.kjzl6hvfrbw6c8mi3r321zv8aujo0pz75u3hd75nmnw8cohfakz650td4c7qxxf.stream_content,public.kjzl6hvfrbw6c66gro4mkjznzi0hfo4wvex415diivoa7j2jbqfric5bndre7k8.stream_id,public.kjzl6hvfrbw6c66gro4mkjznzi0hfo4wvex415diivoa7j2jbqfric5bndre7k8.controller_did,public.kjzl6hvfrbw6c66gro4mkjznzi0hfo4wvex415diivoa7j2jbqfric5bndre7k8.stream_content",
        "key.converter": "org.apache.kafka.connect.json.JsonConverter",
        "key.converter.schemas.enable": "false",
        "value.converter": "org.apache.kafka.connect.json.JsonConverter",
        "value.converter.schemas.enable": "false"
      }
}